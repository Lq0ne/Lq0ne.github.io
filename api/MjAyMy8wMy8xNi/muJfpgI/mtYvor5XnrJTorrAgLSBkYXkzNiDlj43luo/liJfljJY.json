{"title":"渗透测试笔记 - day36 反序列化","date":"2023-03-16T17:42:18.137Z","date_formatted":{"ll":"Mar 16, 2023","L":"03/16/2023","MM-DD":"03-16"},"link":"2023/03/16/渗透测试笔记 - day36 反序列化","updated":"2023-03-17T04:59:54.869Z","content":"<h2 id=\"序列号与反序列化\">序列号与反序列化<a title=\"#序列号与反序列化\" href=\"#序列号与反序列化\"></a></h2>\n<p>PHP为有效存储或传输数据而将一个对象转储为字符流，如serialize()函数和unserialize()函数。将其转化与转回便是序列号和反序列化。</p>\n<h2 id=\"serialize()和serialize()函数\">serialize()和serialize()函数<a title=\"#serialize()和serialize()函数\" href=\"#serialize()和serialize()函数\"></a></h2>\n<p>序列化规则：</p>\n<h3 id=\"对于数组\"><strong>对于数组</strong><a title=\"#对于数组\" href=\"#对于数组\"></a></h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"string\">&#x27;aaa&#x27;</span>,<span class=\"number\">123</span>,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>序列化后为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;aaa&#x27;</span>,<span class=\"number\">123</span>,<span class=\"literal\">true</span>));<span class=\"comment\">//a:3:&#123;i:0;s:3:&quot;aaa&quot;;i:1;i:123;i:2;b:1;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//释义：</span></span><br><span class=\"line\"><span class=\"comment\">//数组类型：大小：3&#123;下标：0；字符串：长度为3：“aaa”；下标：1；整形：123；下标：2；bool型：为真；&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"对于类\"><strong>对于类</strong><a title=\"#对于类\" href=\"#对于类\"></a></h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"variable\">$a</span>=<span class=\"string\">&quot;publica&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$b</span>=<span class=\"string\">&quot;protextedb&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$c</span>=<span class=\"string\">&quot;privatec&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">string</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;this is a test&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>序列化后为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//O:4:&quot;Test&quot;:3:&#123;s:1:&quot;a&quot;;s:7:&quot;publica&quot;;s:4:&quot;*b&quot;;s:10:&quot;protextedb&quot;;s:7:&quot;Testc&quot;;s:8:&quot;privatec&quot;;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//释义</span></span><br><span class=\"line\"><span class=\"comment\">//public ====&gt; a</span></span><br><span class=\"line\"><span class=\"comment\">//protexted ===&gt; %00*%00b</span></span><br><span class=\"line\"><span class=\"comment\">//private ===&gt; %00Test%00c</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"magic_function-魔术方法\">Magic_function 魔术方法<a title=\"#magic_function-魔术方法\" href=\"#magic_function-魔术方法\"></a></h2>\n<p>魔术方法是一种特殊的方法，当对对象执行某些操作时会覆盖 PHP 的默认操作</p>\n<p>下列方法名被认为是魔术方法： __construct() 、 __destruct() 、 __call() 、 __callStatic() 、 __get() 、 __set() 、 __isset() 、 __unset() 、 __sleep() 、 __wakeup() 、 __serialize() 、 __unserialize() 、__toString、 __invoke() 、 __set_state() 、 __clone() 、 __debugInfo() 。</p>\n<h3 id=\"__tostring()\">__toString()<a title=\"#__tostring()\" href=\"#__tostring()\"></a></h3>\n<p>方法用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code> 应该显示些什么。</p>\n<h3 id=\"__construct()和__destruct()\">__construct()和__destruct()<a title=\"#__construct()和__destruct()\" href=\"#__construct()和__destruct()\"></a></h3>\n<p>__construct() 对象初始化时会调用此方法(对于内核而言是指初始化完成后调用此方法)</p>\n<p>__destruct() 当对象销毁时会调用此方法。对象销毁：用户主动销毁对象或者当程序结束时自动销毁</p>\n<h3 id=\"__get()和__set()\">__get()和__set()<a title=\"#__get()和__set()\" href=\"#__get()和__set()\"></a></h3>\n<p>当设置和获取对象的属性不存在或不允许被读写时调用。</p>\n<h3 id=\"__isset()和__unset()\">__isset()和__unset()<a title=\"#__isset()和__unset()\" href=\"#__isset()和__unset()\"></a></h3>\n<p>当调用方法isset()判断对象是否存在某属性和调用unset()注销某属性时，且当这些属性不存在或不可访问时，会分别调用__isset()和__unset()方法,</p>\n<p>__isset($name) 调用方法isset()判断不可访问的类属性时调用$name表示属性名.</p>\n<p>__unset($name) 调用方法unset()删除不可访问的类属性时调用$name表示属性名.</p>\n<h3 id=\"__sleep()和__wakeup()\">__sleep()和__wakeup()<a title=\"#__sleep()和__wakeup()\" href=\"#__sleep()和__wakeup()\"></a></h3>\n<p>当调用searialize()时会将对象的各属性序列化以方便保存起来，并调用__sleep()函数</p>\n<p>而当调用unsearialize()方法是将保存的序列化的数据解开变成对象，并调用__wakeup()函数</p>\n<h2 id=\"反序列化bypass\">反序列化ByPass<a title=\"#反序列化bypass\" href=\"#反序列化bypass\"></a></h2>\n<h3 id=\"__wakerup()函数绕过\">__wakerup()函数绕过<a title=\"#__wakerup()函数绕过\" href=\"#__wakerup()函数绕过\"></a></h3>\n<p>当序列化中变量数标注多于实际变量数时，wakeup将不被执行（XCTF–unserialize23）</p>\n<h3 id=\"正则匹配绕过\">正则匹配绕过<a title=\"#正则匹配绕过\" href=\"#正则匹配绕过\"></a></h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/[oc]:\\d+:/i&#x27;</span>, <span class=\"variable\">$var</span>)</span><br></pre></td></tr></table></figure>\n<p>+4绕过任意长度数字匹配</p>\n","prev":{"title":"渗透测试笔记 - day39、40 复习","link":"2023/03/16/渗透测试笔记 - day39、40 复习"},"next":{"title":"渗透测试笔记 - day37 逻辑漏洞","link":"2023/03/16/渗透测试笔记 - day37 逻辑漏洞"},"plink":"https://Lq0ne.github.io/2023/03/16/渗透测试笔记 - day36 反序列化/","toc":[{"id":"序列号与反序列化","title":"序列号与反序列化","index":"1"},{"id":"serialize()和serialize()函数","title":"serialize()和serialize()函数","index":"2","children":[{"id":"对于数组","title":"对于数组","index":"2.1"},{"id":"对于类","title":"对于类","index":"2.2"}]},{"id":"magic_function-魔术方法","title":"Magic_function 魔术方法","index":"3","children":[{"id":"__tostring()","title":"__toString()","index":"3.1"},{"id":"__construct()和__destruct()","title":"__construct()和__destruct()","index":"3.2"},{"id":"__get()和__set()","title":"__get()和__set()","index":"3.3"},{"id":"__isset()和__unset()","title":"__isset()和__unset()","index":"3.4"},{"id":"__sleep()和__wakeup()","title":"__sleep()和__wakeup()","index":"3.5"}]},{"id":"反序列化bypass","title":"反序列化ByPass","index":"4","children":[{"id":"__wakerup()函数绕过","title":"__wakerup()函数绕过","index":"4.1"},{"id":"正则匹配绕过","title":"正则匹配绕过","index":"4.2"}]}],"copyright":{"license":"个人原创 - 自由转载 - 保持署名 - 禁止商用","published":"March 16, 2023","author":"Lq0ne","link":"<a href=\"https://Lq0ne.github.io/2023/03/16/渗透测试笔记 - day36 反序列化/\" title=\"渗透测试笔记 - day36 反序列化\">https://Lq0ne.github.io/2023/03/16/渗透测试笔记 - day36 反序列化/</a>"},"reading_time":"633 words in 4 min"}